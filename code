#include "raylib.h"

typedef enum GameState
{
    STATE_MENU,
    STATE_GAME
} GameState;
int main(void)
{
    // Initialization
    //--------------------------------------------------------------------------------------
    const int screenWidth = 1600;
    const int screenHeight = 900;

    InitWindow(screenWidth, screenHeight, "raylib [core] example - basic window");

    SetTargetFPS(60); // Set our game to run at 60 frames-per-second

    //--------------------------------------------------------------------------------------
    GameState state = STATE_MENU;
    int menuIndex = 0; // 0 = "Start", 1 = "Quit"
    int selectedplayers = 0;
    bool playerConfirmed = false;
    bool gameStarted = false;
    const char *names[3] = {"CEDRIC", "AMIEL", "IAN"};
    int positions[3] = {400, 700, 1000};

    // Main game loop
    while (!WindowShouldClose()) // Detect window close button or ESC key
    {
        if (state == STATE_MENU)
        {
            if (IsKeyPressed(KEY_DOWN) || IsKeyPressed(KEY_S))
                menuIndex = 1;
            if (IsKeyPressed(KEY_UP) || IsKeyPressed(KEY_W))
                menuIndex = 0;

            if (IsKeyPressed(KEY_ENTER))
            {
                if (menuIndex == 0)
                    state = STATE_GAME;
            }
            else if (menuIndex == 1)
            {
                if (IsKeyPressed(KEY_ENTER))
                {
                    break; // this exits the program
                }
            }
        }
        else if (state == STATE_GAME)
        {
            if (IsKeyPressed(KEY_ESCAPE))
            {
                state = STATE_MENU;
            }
                if (!playerConfirmed)
    {
        if (IsKeyPressed(KEY_RIGHT)) selectedplayers = (selectedplayers + 1) % 3;
        if (IsKeyPressed(KEY_LEFT)) selectedplayers = (selectedplayers - 1 + 3) % 3;

        if (IsKeyPressed(KEY_ENTER)) playerConfirmed = true;
    }
    else if (playerConfirmed && !gameStarted)
    {
        // Press Enter again to start the (currently blank) game
        if (IsKeyPressed(KEY_ENTER))
        {
            gameStarted = true;
        }
    }
}



        //-----------------------DRAWING AREA OF FUNCTIONS(BACKBONE)---------------------//
        BeginDrawing();

        ClearBackground(RAYWHITE);

        if (state == STATE_MENU)
        {

            DrawText("OUT OF TOUCH", 600, 150, 50, BLACK);

            Color startcolor = (menuIndex == 0) ? RED : DARKGRAY;
            Color quitcolor = (menuIndex == 0) ? DARKGRAY : RED;

            DrawText("START GAME", 650, 300, 40, startcolor);
            DrawText("QUIT GAME", 670, 360, 40, quitcolor);

            DrawText("USE ARROWS UP AND DOWN TO CHOOSE AND PRESS ENTER TO SELECT", 420, 450, 20, GRAY);
        }
        else if (state == STATE_GAME)
        {
            // when game starts, clear everything (blank screen)
        if (gameStarted)
        {
         ClearBackground(RAYWHITE);
         // DITO NA MAG START YUNG MISMONG LARO
         EndDrawing();
         continue;
        }
            // --- DRAW GAME SCREEN ---//
            DrawText("GAME RUNNING!", 610, 200, 40, DARKBLUE);
            DrawText("Press ESC to return to menu", 620, 260, 20, GRAY);
            for (int i = 0; i < 3; i++)
                {
                    Color color = (i == selectedplayers) ? RED : DARKBLUE;
                    DrawRectangleLines(positions[i], 300, 150, 150, color);
                    DrawText(names[i], positions[i] + -1, 450, 40, color);
                }

            if (playerConfirmed && !gameStarted)
                {
                    DrawText(TextFormat("You chose: %s", names[selectedplayers]), 620, 600, 30, BLACK);
                    DrawText("Press ENTER again to start", 620, 640, 20, GRAY);
                }
            }
                EndDrawing();
        //----------------------------------------------------------------------------------
}

    // De-Initialization
    //--------------------------------------------------------------------------------------
    CloseWindow(); // Close window and OpenGL context
    //--------------------------------------------------------------------------------------

    return 0;
}
